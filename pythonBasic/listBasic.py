# 리스트 슬라이싱
a = [1, 2, 3, 4, 5]
print(a[0:2]) # [1, 2]

b = a[:2] # 0 ~ 1 까지
c = a[2:] # 2 ~ 끝까지
print(b) # [1, 2]
print(c) # [3, 4, 5]

# 리스트의 마지막 요솟값
print(a[-1]) # 5

# 문자열 슬라이싱 - 리스트 슬라이싱과 동일, 처음 ~ 인덱스 -1 까지
s = "12345"
print(s[0:2]) # '12'

# 리스트 연산

## 리스트 더하기
l1 = [1, 2, 3]
l2 = [4, 5, 6]
print(l1 + l2) # [1, 2, 3, 4, 5, 6] 으로 더하기

## 리스트 반복하기
l3 = [1, 2, 3]
### 문자열에서 "abc" * 3 = "abcabcabc" 와 같음
print(l3 * 3)  # [1, 2, 3, 1, 2, 3, 1, 2, 3] , [1, 2, 3] 리스트가 3번 반복하여 새로운 리스트 생성

## 리스트 길이 구하기
l4 = [4, 5, 6]
print(len(l4)) # 3

## 리스트 값 수정하기
l5 = [1, 2, 3]
l5[2] = 4
print(l5)  # [1, 2, 4]

## 리스트 요소 삭제하기
l6 = [1, 2, 3]
del l6[1]  # del 객체 => 파이썬 자체 삭제 함수, 객체 : 파이썬에서 사용되는 모든 자료형
print(l6) # [1, 3]

## 리스트 요소 삭제하기 - 요소 여러개
l7 = [1, 2, 3, 4, 5]
del l7[2:]
print(l7) # [1, 2]

# 리스트 관련 함수 : 리스트 변수 뒤 `.` 을 붙여 여러 리스트 관련 함수 사용

## 리스트 요소 추가하기 : append
l8 = [1, 2, 3]
l8.append(4)
print(l8) # [1, 2, 3, 4]
l8.append([5, 6]) # 리스트 안에는 어떤 자료형도 추가할 수 있다.
print(l8) # [1, 2, 3, 4, [5, 6]]

## 리스트 정렬 - sort (숫자, 알파벳 다 됨)
l9 = [1, 4, 3, 2]
l9.sort()
print(l9) # [ 1, 2, 3, 4 ]

## 리스트 뒤집기 - reverse (현재 리스트를 그대로 거꾸로 뒤집어 줌, 역순 정렬 아님)

l10 = ['a', 'c', 'b']
l10.reverse()
print(l10) # ['b', 'c', 'a']

## 인덱스 반환 - index(x)는 리스트에 x가 있으면 x의 인덱스값(위칫값)을 리턴
l11 = [1, 2, 3]
print(l11.index(3)) # 2
print(l11.index(1)) # 0
print(l11.index(0)) # 0은 리스트에 존재하지 않기에 오류 발생

## 리스트에 요소 삽입 - insert / x위치에 y 삽입
l12 = [1, 2, 3]
l12.insert(0, 4)
print(l12)  # [4, 1, 2, 3]

## 리스트 요소 제거 - remove / remove(x) : 첫번째로 나오는 x 제거
l13 = [1, 2, 3, 1, 2, 3]
l13.remove(3)
print(l13) # [1, 2, 1, 2, 3]

## 리스트 요소 제거 pop / 리스트의 맨 마지막 요소를 리턴하고 그 요소는 삭제
l14 = [1, 2, 3]
print(l14.pop()) # 3
print(l14) # [1, 2]

## 리스트 요소 제거 pop(x) / x번째 요소 리턴하고 그 요소 삭제
l15 = [1, 2, 3]
print(l15.pop(1)) # 2
print(l15)  # [1, 3]

## 리스트에 포함된 요소 x의 개수 세기 - count(x)
l16 = [1, 2, 3, 1]
print(l16.count(1)) # 2

## 리스트 확장 - extend / extend(x) -> x는 리스트만 올 수 있음 / x 리스트 더하게됨
l17 = [1, 2, 3]
l17.extend([4, 5, 6]) # l17 += [4, 5, 6] 과 동일
print(l17) # [1, 2, 3, 4, 5, 6]

